@import "tailwindcss";

:root {
  --background: #0a0a0a;
  --foreground: #ffffff;
  --font-inter: var(--font-inter);
  --cyber-green: #00ff88;
  --cyber-green-dark: #00cc6a;
  --cyber-blue: #00d4ff;
  --metallic: #8b949e;
  --metallic-light: #c0c0c0;
  --holo-gradient: linear-gradient(45deg, #00ff88, #00d4ff, #00ff88);
}

[data-theme="light"] {
  --background: #ffffff;
  --foreground: #0a0a0a;
  --cyber-green: #00cc6a;
  --cyber-green-dark: #00994d;
  --cyber-blue: #0099cc;
  --metallic: #4a5568;
  --metallic-light: #718096;
  --holo-gradient: linear-gradient(45deg, #00cc6a, #0099cc, #00cc6a);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-inter);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-inter), system-ui, sans-serif;
  scroll-behavior: smooth;
  position: relative;
  transition: background-color 0.5s ease, color 0.5s ease;
  overflow-x: hidden;
}

html {
  scroll-behavior: smooth;
}

/* Cyber Grid Background */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(var(--cyber-green-rgb, rgba(0, 255, 136, 0.1)) 1px, transparent 1px),
    linear-gradient(90deg, var(--cyber-green-rgb, rgba(0, 255, 136, 0.1)) 1px, transparent 1px);
  background-size: 100px 100px;
  pointer-events: none;
  z-index: -1;
  animation: gridPulse 4s ease-in-out infinite;
  opacity: 0.3;
}

[data-theme="light"] body::before {
  --cyber-green-rgb: rgba(0, 204, 106, 0.15);
  opacity: 0.4;
}

@keyframes gridPulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

[data-theme="light"] {
  --grid-opacity: 0.4;
}

[data-theme="light"] body::before {
  opacity: var(--grid-opacity);
}

/* Custom cursor styles */
.cursor-hover {
  cursor: none;
}

.cursor-click {
  cursor: none;
}

.cursor-text {
  cursor: none;
}

/* Ensure cursor is always visible in light mode */
.light-mode {
  cursor: auto !important;
}

.light-mode * {
  cursor: auto !important;
}

/* Override any cursor: none in light mode */
.light-mode .cursor-hover,
.light-mode .cursor-click,
.light-mode .cursor-text {
  cursor: auto !important;
}

/* Text cursor for input fields in light mode */
.light-mode input, 
.light-mode textarea, 
.light-mode [contenteditable] {
  cursor: text !important;
}

/* Pointer cursor for clickable elements in light mode */
.light-mode button,
.light-mode [role="button"],
.light-mode a,
.light-mode .cursor-pointer,
.light-mode .holo-button {
  cursor: pointer !important;
}

/* Force cursor visibility on hover in light mode */
.light-mode *:hover {
  cursor: auto !important;
}

.light-mode button:hover,
.light-mode [role="button"]:hover,
.light-mode a:hover,
.light-mode .cursor-pointer:hover,
.light-mode .holo-button:hover {
  cursor: pointer !important;
}

/* Holographic effects */
.holo-text {
  background: var(--holo-gradient);
  background-size: 200% 200%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: holoShift 3s ease-in-out infinite;
}

@keyframes holoShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Glitch effect */
.glitch {
  position: relative;
  color: var(--cyber-green);
  animation: glitch 2s infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  animation: glitch-1 0.5s infinite;
  color: var(--cyber-blue);
  z-index: -1;
}

.glitch::after {
  animation: glitch-2 0.5s infinite;
  color: #ff0080;
  z-index: -2;
}

@keyframes glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

@keyframes glitch-1 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(2px, -2px); }
  40% { transform: translate(-2px, 2px); }
  60% { transform: translate(-2px, -2px); }
  80% { transform: translate(2px, 2px); }
}

@keyframes glitch-2 {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, -2px); }
  40% { transform: translate(2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(-2px, 2px); }
}

/* Holographic button */
.holo-button {
  position: relative;
  background: transparent;
  border: 2px solid var(--cyber-green);
  color: var(--cyber-green);
  padding: 12px 24px;
  border-radius: 0;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  overflow: hidden;
  transition: all 0.3s ease;
}

.holo-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 136, 0.2), transparent);
  transition: left 0.5s;
}

[data-theme="light"] .holo-button::before {
  background: linear-gradient(90deg, transparent, rgba(0, 204, 106, 0.2), transparent);
}

.holo-button:hover::before {
  left: 100%;
}

.holo-button:hover {
  box-shadow: 
    0 0 20px var(--cyber-green),
    inset 0 0 20px rgba(0, 255, 136, 0.1);
  text-shadow: 0 0 10px var(--cyber-green);
}

[data-theme="light"] .holo-button:hover {
  box-shadow: 
    0 0 20px var(--cyber-green),
    inset 0 0 20px rgba(0, 204, 106, 0.1);
  text-shadow: 0 0 10px var(--cyber-green);
}

/* Metallic surface */
.metallic {
  background: linear-gradient(135deg, #2a2a2a, #4a4a4a, #2a2a2a);
  background-size: 200% 200%;
  animation: metallicShine 3s ease-in-out infinite;
}

[data-theme="light"] .metallic {
  background: linear-gradient(135deg, #e2e8f0, #cbd5e0, #e2e8f0);
}

@keyframes metallicShine {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
}

[data-theme="light"] ::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
}

::-webkit-scrollbar-thumb {
  background: var(--holo-gradient);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--cyber-green);
}

/* Scan lines effect */
.scan-lines::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    transparent 50%,
    rgba(0, 255, 136, 0.03) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  animation: scanlines 0.1s linear infinite;
}

[data-theme="light"] .scan-lines::after {
  background: linear-gradient(
    transparent 50%,
    rgba(0, 204, 106, 0.05) 50%
  );
}

@keyframes scanlines {
  0% { transform: translateY(0); }
  100% { transform: translateY(4px); }
}

/* Utility classes */
.text-balance {
  text-wrap: balance;
}

.perspective-1000 {
  perspective: 1000px;
}

.transform-style-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

/* Floating particles for cyber effect */
.cyber-particles {
  position: absolute;
  width: 2px;
  height: 2px;
  background: var(--cyber-green);
  border-radius: 50%;
  animation: float 6s ease-in-out infinite;
  box-shadow: 0 0 6px var(--cyber-green);
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Theme Toggle Button */
.theme-toggle {
  position: relative;
  width: 60px;
  height: 30px;
  background: linear-gradient(45deg, var(--cyber-green), var(--cyber-blue));
  border-radius: 15px;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 2px solid var(--cyber-green);
  overflow: hidden;
}

.theme-toggle::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: 22px;
  height: 22px;
  background: var(--background);
  border-radius: 50%;
  transition: all 0.3s ease;
  z-index: 2;
}

[data-theme="light"] .theme-toggle::before {
  transform: translateX(30px);
}

.theme-toggle::after {
  content: 'üåô';
  position: absolute;
  top: 50%;
  left: 8px;
  transform: translateY(-50%);
  font-size: 12px;
  z-index: 1;
  transition: all 0.3s ease;
}

[data-theme="light"] .theme-toggle::after {
  content: '‚òÄÔ∏è';
  left: 38px;
}

.theme-toggle:hover {
  box-shadow: 0 0 15px var(--cyber-green);
  transform: scale(1.05);
}

/* Light mode specific adjustments */
[data-theme="light"] {
  --text-primary: #1a202c;
  --text-secondary: #4a5568;
  --bg-primary: #ffffff;
  --bg-secondary: #f7fafc;
  --border-color: #e2e8f0;
}

[data-theme="light"] .text-gray-300 {
  color: var(--text-secondary);
}

[data-theme="light"] .text-gray-400 {
  color: #718096;
}

[data-theme="light"] .bg-black\/90 {
  background-color: rgba(255, 255, 255, 0.9);
}

[data-theme="light"] .border-green-500\/30 {
  border-color: rgba(0, 204, 106, 0.3);
}

[data-theme="light"] .shadow-green-500\/10 {
  box-shadow: 0 4px 6px -1px rgba(0, 204, 106, 0.1);
}

/* Performance optimizations for light mode */
.light-mode {
  /* Disable heavy animations and effects */
  --animation-duration: 0s !important;
  --transition-duration: 0.1s !important;
}

.light-mode * {
  /* Disable ALL animations and transitions */
  animation: none !important;
  animation-duration: 0s !important;
  animation-delay: 0s !important;
  animation-iteration-count: 1 !important;
  transition: none !important;
  transition-duration: 0.1s !important;
  transform: none !important;
}

.light-mode *::before,
.light-mode *::after {
  /* Disable animations in pseudo-elements */
  animation: none !important;
  transition: none !important;
}

.light-mode body::before {
  /* Disable grid background animation */
  animation: none !important;
  opacity: 0.1 !important;
}

/* Fix specific text colors in light mode */
.light-mode .text-green-400 {
  color: var(--cyber-green) !important;
}

.light-mode .text-cyan-400 {
  color: var(--cyber-blue) !important;
}

.light-mode .text-green-400\/50 {
  color: rgba(0, 204, 106, 0.5) !important;
}

.light-mode .group:hover .text-green-400 {
  color: var(--cyber-green) !important;
}

.light-mode .hover\:text-green-400:hover {
  color: var(--cyber-green) !important;
}

.light-mode .hover\:text-cyan-400:hover {
  color: var(--cyber-blue) !important;
}

.light-mode .holo-button::before {
  /* Disable button shine effect */
  display: none !important;
  content: none !important;
}

.light-mode .holo-button:hover {
  /* Simplify button hover effect */
  box-shadow: 0 2px 8px rgba(0, 204, 106, 0.3) !important;
  text-shadow: none !important;
  transform: none !important;
}

.light-mode .metallic {
  /* Disable metallic shine animation */
  background: var(--bg-secondary) !important;
  background-image: none !important;
  animation: none !important;
}

.light-mode .scan-lines::after {
  /* Disable scan lines effect */
  display: none !important;
  content: none !important;
  animation: none !important;
}

.light-mode .cyber-particles {
  /* Disable floating particles */
  display: none !important;
  animation: none !important;
}

/* Disable ALL Tailwind animations in light mode */
.light-mode [class*="animate-"] {
  animation: none !important;
  animation-duration: 0s !important;
  animation-delay: 0s !important;
  animation-iteration-count: 1 !important;
}

/* Disable ALL Framer Motion animations in light mode */
.light-mode [class*="motion-"] {
  animation: none !important;
  transition: none !important;
  transform: none !important;
}

/* Disable ALL hover animations in light mode */
.light-mode *:hover {
  transform: none !important;
  animation: none !important;
  transition: none !important;
}

.light-mode .theme-toggle {
  /* Simplify theme toggle */
  background: var(--cyber-green) !important;
  animation: none !important;
}

.light-mode .theme-toggle:hover {
  box-shadow: 0 2px 8px rgba(0, 204, 106, 0.3) !important;
  transform: none !important;
}

/* Optimize scrollbar for light mode */
.light-mode ::-webkit-scrollbar-thumb {
  background: var(--cyber-green) !important;
  background-image: none !important;
}

/* Disable ALL complex gradients in light mode */
.light-mode [class*="bg-gradient-"] {
  background: var(--bg-secondary) !important;
  background-image: none !important;
  animation: none !important;
}

/* Simplify ALL shadows in light mode */
.light-mode [class*="shadow-"] {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
}

/* Optimize text rendering for light mode */
.light-mode {
  text-rendering: optimizeSpeed;
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

/* Disable ALL keyframe animations in light mode */
.light-mode * {
  animation-name: none !important;
}

/* Disable ALL transforms in light mode */
.light-mode * {
  transform: none !important;
  transform-style: flat !important;
  perspective: none !important;
}

/* EXCEPTIONS: Keep holo-text and glitch effects in light mode */
.light-mode .holo-text {
  animation: holoShift 3s ease-in-out infinite !important;
}

.light-mode .glitch {
  animation: glitch 2s infinite !important;
}

.light-mode .glitch::before {
  animation: glitch-1 0.5s infinite !important;
}

.light-mode .glitch::after {
  animation: glitch-2 0.5s infinite !important;
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Restore effects when light-mode class is not present */
html:not(.light-mode) .holo-text {
  background: var(--holo-gradient);
  background-size: 200% 200%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: holoShift 3s ease-in-out infinite;
}

html:not(.light-mode) .glitch {
  position: relative;
  color: var(--cyber-green);
  animation: glitch 2s infinite;
}

html:not(.light-mode) .glitch::before,
html:not(.light-mode) .glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

html:not(.light-mode) .glitch::before {
  animation: glitch-1 0.5s infinite;
  color: var(--cyber-blue);
  z-index: -1;
}

html:not(.light-mode) .glitch::after {
  animation: glitch-2 0.5s infinite;
  color: #ff0080;
  z-index: -2;
}

html:not(.light-mode) .holo-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 136, 0.2), transparent);
  transition: left 0.5s;
}

html:not(.light-mode) .holo-button:hover::before {
  left: 100%;
}

html:not(.light-mode) .holo-button:hover {
  box-shadow: 
    0 0 20px var(--cyber-green),
    inset 0 0 20px rgba(0, 255, 136, 0.1);
  text-shadow: 0 0 10px var(--cyber-green);
}

html:not(.light-mode) .metallic {
  background: linear-gradient(135deg, #2a2a2a, #4a4a4a, #2a2a2a);
  background-size: 200% 200%;
  animation: metallicShine 3s ease-in-out infinite;
}

html:not(.light-mode) .scan-lines::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    transparent 50%,
    rgba(0, 255, 136, 0.03) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  animation: scanlines 0.1s linear infinite;
}

html:not(.light-mode) .cyber-particles {
  display: block;
}

/* Restore grid animation when not in light mode */
html:not(.light-mode) body::before {
  animation: gridPulse 4s ease-in-out infinite;
  opacity: 0.3;
}

/* Force animation restoration when light-mode is removed */
html:not(.light-mode) .holo-text {
  animation: holoShift 3s ease-in-out infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .glitch {
  animation: glitch 2s infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .glitch::before {
  animation: glitch-1 0.5s infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .glitch::after {
  animation: glitch-2 0.5s infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .metallic {
  animation: metallicShine 3s ease-in-out infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .scan-lines::after {
  animation: scanlines 0.1s linear infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

html:not(.light-mode) .cyber-particles {
  animation: float 6s ease-in-out infinite !important;
  animation-delay: 0s !important;
  animation-iteration-count: infinite !important;
}

/* Ensure all animations are restored when not in light mode */
html:not(.light-mode) * {
  animation-duration: revert;
  animation-delay: revert;
  animation-iteration-count: revert;
  transition-duration: revert;
}

/* Force animation restart for elements that might be stuck */
html:not(.light-mode) [class*="animate-"] {
  animation: revert !important;
}

html:not(.light-mode) [class*="motion-"] {
  animation: revert !important;
  transition: revert !important;
}

/* Mobile-specific improvements */
@media (max-width: 640px) {
  /* Improve touch targets */
  .holo-button {
    min-height: 44px;
    padding: 12px 16px;
  }
  
  /* Better spacing for mobile */
  .space-y-6 > * + * {
    margin-top: 1.25rem;
  }
  
  .space-y-8 > * + * {
    margin-top: 1.75rem;
  }
  
  /* Improve text readability on mobile */
  .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  
  .text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  
  .text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  
  /* Better grid layouts for mobile */
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  
  /* Improve form inputs on mobile */
  input, textarea, select {
    font-size: 16px; /* Prevents zoom on iOS */
  }
  
  /* Better button sizing for mobile */
  button {
    min-height: 44px;
  }
  
  /* Improve navigation for mobile */
  nav a, nav button {
    padding: 12px 16px;
    min-height: 44px;
  }
}

/* Tablet-specific improvements */
@media (min-width: 641px) and (max-width: 1024px) {
  /* Better spacing for tablets */
  .space-y-8 > * + * {
    margin-top: 2rem;
  }
  
  /* Improve grid layouts for tablets */
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

/* Desktop-specific improvements */
@media (min-width: 1025px) {
  /* Restore full spacing for desktop */
  .space-y-8 > * + * {
    margin-top: 2rem;
  }
  
  /* Better hover effects for desktop */
  .holo-button:hover {
    transform: translateY(-2px);
  }
}

/* High DPI displays */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  /* Sharper text rendering */
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* Landscape mobile improvements */
@media (max-width: 640px) and (orientation: landscape) {
  /* Reduce padding for landscape mobile */
  .py-12 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  
  .py-16 {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
  
  /* Better use of horizontal space */
  .px-4 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  .holo-button:hover {
    transform: none;
  }
  
  .holo-text {
    animation: none;
  }
  
  .glitch {
    animation: none;
  }
  
  .metallic {
    animation: none;
  }
}

/* Focus styles for better accessibility */
.holo-button:focus,
button:focus,
input:focus,
textarea:focus,
select:focus {
  outline: 2px solid var(--cyber-green);
  outline-offset: 2px;
}

/* Skip link for accessibility */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--cyber-green);
  color: var(--background);
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 1000;
}

.skip-link:focus {
  top: 6px;
}